<html><head>
<script>
// Whitespace version and canonicalized version
var httpW = /^\s*https?:\/\/([-\w\.]+)+(:\d+)?(\/([-\w\/_~\.,#%=]*(\?\S+)?)?)?/;
var http = /https?:\/\/([-\w\.]+)+(:\d+)?(\/([-\w\/_~\.,#%=]*(\?\S+)?)?)?/;

// Link without the protocol, whitespace and non-whitespace version
var links = [[/^\s*www\.[-\w\.]+(\/[\S]*)*/, /www\.[-\w\.]+(\/[\S]*)*/],  // Begins with www.
             [/\S+\.\S\S\S?\s*$/, /\S+\.\S\S\S?/], // Approximate TLDs (Top Level Domains)
             [/\S+\.html?\s*$/, /\S+\.html?/] // Ends with html
            ]

chrome.extension.onConnect.addListener(function(port) {
  port.onMessage.addListener(function(data) {
    if (data.message == 'tab') {
      chrome.tabs.getSelected(null, function(tab){
	var new_idx = tab.index;
	if (data.x_dir > 0) {
          ++new_idx;
	}
	var fg = (data.y_dir == 1);

	var link;
	if (httpW.test(data.values))
	  link = data.values.match(http)[0];
	else {
          for (var i=0; i<links.length; i++)
            if (links[i][0].test(data.values)) {
              link = "http://" + data.values.match(links[i][1])[0];
              break;
            }
          if (!link) {
	    var engine = localStorage["search_engine"];
	    link = engine + data.values;
	  }
	}
	chrome.tabs.create({url : link, selected : fg, index : new_idx});});
    }
  });
});

function restore_options() {
  var engine = localStorage["search_engine"];
  if (!engine) {
    localStorage["search_engine"] = "http://www.google.com/search?&q=";
  }  
}
</script>
</head>
<body onload="restore_options()">
</body></html>
